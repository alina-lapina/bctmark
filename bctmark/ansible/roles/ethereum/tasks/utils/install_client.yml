- name: Create Parity group
  group: 
    name: "{{ parity_group }}"
    system: yes 
    state: present

- name: Create Parity home directory
  file:
    dest: "{{ parity_home }}"
    state: directory
    mode: "0777"

- name: Create Parity user
  user: 
    name: "{{ parity_user }}" 
    group: "{{ parity_group }}"
    home: "{{ parity_home }}"
    state: present

- set_fact: parity_installed={{ parity_version.stdout_lines[0] is defined }}

- name: Download Parity installer
  get_url: 
    url: "{{ parity_installer_url }}"
    dest: /tmp/parity_installer.sh
  when: not parity_installed

- name: Make Parity installer executable
  file:
    dest: /tmp/parity_installer.sh
    mode: a+x
  when: not parity_installed

- name: Run Parity installer
  shell: /tmp/parity_installer.sh --release stable
  when: not parity_installed

- name: configuration file for parity bootnode
  template:
    src: templates/config_bootnode.toml.j2
    dest: "{{parity_home}}/config.toml"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: is_bootnode

- name: configuration file for parity peer
  template:
    src: templates/config_peer.toml.j2
    dest: "{{ parity_home }}/config.toml"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: not is_bootnode

- name: Copy Chain config file
  template:
    src: chain.json.j2
    dest: "{{ parity_home }}/chain.json"
    owner: "{{ parity_user }}"
    mode: u=rwx,g=rwx,o=rwx
  vars:
    add_accounts: false

- name: list of bootnodes peers
  template:
    src: templates/list_bootnodes.j2
    dest: "{{ parity_home }}/list_bootnodes"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: not is_bootnode

- name: configuration file for systemd parity service
  template:
    src: templates/parity.service.j2
    dest: /etc/systemd/system/parity.service
    owner: root
    group: root
    mode: 0644

- name: reload systemd
  command: systemctl daemon-reload

- name: enable parity service
  service: name=parity enabled=yes state=started