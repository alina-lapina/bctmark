- group: name={{ parity_group }} system=yes state=present
- user: name={{ parity_user }} group={{ parity_group }} home={{ parity_home }} state=present

- name: Download Parity installer
  get_url: 
    url: "{{ parity_installer_url }}"
    dest: /tmp/parity_installer.sh

- name: Make Parity installer executable
  file:
    dest: /tmp/parity_installer.sh
    mode: a+x

- name: Run Parity installer
  shell: /tmp/parity_installer.sh

- name: configuration file for parity bootnode
  template:
    src: templates/config_bootnode.toml.j2
    dest: "/home/{{ parity_user }}/config.toml"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: is_bootnode

- name: configuration file for parity peer
  template:
    src: templates/config_peer.toml.j2
    dest: "/home/{{ parity_user }}/config.toml"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: not is_bootnode

- name: list of bootnodes peers
  template:
    src: templates/list_bootnodes.j2
    dest: "/home/{{ parity_user }}/list_bootnodes"
    owner: "{{ parity_user }}"
    group: "{{ parity_group }}"
  when: not is_bootnode

- name: configuration file for systemd parity service
  template:
    src: templates/parity.service.j2
    dest: /etc/systemd/system/parity.service
    owner: root
    group: root
    mode: 0644

- name: reload systemd
  command: systemctl daemon-reload

- name: enable parity service
  service: name=parity enabled=yes state=started

- name: wait for JSONRPC API to be available
  wait_for:
    host: 127.0.0.1
    port: 8545
    delay: 5
    timeout: 60

- name: Retrieve Enode
  shell: >
    curl
    --data '{"method":"parity_enode","params":[],"id":1,"jsonrpc":"2.0"}' 
    -H "Content-Type:application/json" 
    -X POST http://127.0.0.1:8545 | sed -n 's/.*\(enode.*\)@.*/\1/p'
  register: enode
  warn: false

- debug: msg={{enode.stdout}}@{{ansible_eth1.ipv4.address}}:30303