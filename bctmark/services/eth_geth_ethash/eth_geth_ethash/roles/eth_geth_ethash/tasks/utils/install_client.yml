- name: Create Geth group
  group: 
    name: "{{ geth_group }}"
    system: yes 
    state: present

- name: Destroy Geth home directory if exists
  file:
    dest: "{{ geth_home }}"
    state: absent

- name: Create Geth home directory
  file:
    dest: "{{ geth_home }}"
    state: directory
    mode: "0777"

- name: Create Geth user
  user: 
    name: "{{ geth_user }}" 
    group: "{{ geth_group }}"
    home: "{{ geth_home }}"
    state: present

- name: kill running geth process if needed
  shell: "pkill geth || true"

- name: Download Geth 1.9.11
  unarchive:
    src: https://gethstore.blob.core.windows.net/builds/geth-alltools-linux-amd64-1.9.10-58cf5686.tar.gz
    dest: /tmp/
    remote_src: yes

- name: Install Geth command
  command: cp /tmp/geth-alltools-linux-amd64-1.9.10-58cf5686/geth /usr/bin/geth

- name: Install Geth Bootnode utility command
  command: cp /tmp/geth-alltools-linux-amd64-1.9.10-58cf5686/bootnode /usr/bin/bootnode

- name: configuration file for geth bootnode
  template:
    src: templates/config_bootnode.toml.j2
    dest: "{{geth_home}}/config.toml"
    owner: "{{ geth_user }}"
    group: "{{ geth_group }}"
  when: "'bootnode' in group_names"

- name: configuration file for geth peer
  template:
    src: templates/config_peer.toml.j2
    dest: "{{ geth_home }}/config.toml"
    owner: "{{ geth_user }}"
    group: "{{ geth_group }}"
  when: "'bootnode' not in group_names"

- name: configuration file for systemd geth service
  template:
    src: templates/geth.service.j2
    dest: /etc/systemd/system/geth.service
    owner: root
    group: root
    mode: 0644
  vars:
    - activate_mining: false

- name: reload systemd
  command: systemctl daemon-reload

- name: enable geth service
  service: name=geth enabled=yes state=started

- name: Wait until HTTP port open
  wait_for:
    port: 8545
    delay: 5

- name: Retrieve Enode
  shell: geth attach http://127.0.0.1:8545 --exec "admin.nodeInfo.enode" | sed -n 's/.*enode:\/\/\([0-9a-zA-Z]*\).*/\1/p'
  register: enode_address

- debug:
    msg: "enode_address: {{enode_address}}"
